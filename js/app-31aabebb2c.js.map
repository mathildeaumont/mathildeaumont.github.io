{"version":3,"sources":["app/app.module.js","app/app.run.js","app/app.config.js","app/common/constants.js","app/common/menu.controller.js","app/home/home.module.js","app/home/config.route.js","js/app.js","app/home/home.factory.js","app/home/home.controller.js","app/articles/article.module.js","app/articles/config.route.js","app/common/filters/moment.filter.js","app/articles/articles.factory.js","app/articles/articles.controller.js","app/articles/comments/comments.controller.js","app/articles/comments/comments.directive.js","app/articles/comments/comments.service.js"],"names":["bootstrapApplication","angular","element","document","ready","bootstrap","app","module","run","config","$compileProvider","debugInfoEnabled","host_url","Menu","$location","goToHome","path","viewModel","this","controller","routerConfig","$stateProvider","$urlRouterProvider","_transitionToEntryPoint","$state","transitionTo","$inject","when","otherwise","state","url","views","@","templateUrl","controllerAs","title","resolve","articles","articleFactory","fetchArticles","then","data","pagination","HomeFactory","$http","fetchArticlesContent","req","method","headers","Content-Type","factory","Home","$log","$window","goToArticle","articleId","scrollTo","nextPage","currentPage","previousPage","debug","articleRoute","article","$stateParams","fetchArticleContent","comments","commentsService","getCommentsByArticle","nbComments","totalComments","momentFilter","input","moment","format","filter","ArticleFactory","page","get","response","insertView","post","Article","$sce","_init","vm","recipe","id","forEach","comment","text","trustAsHtml","CommentsController","sendComment","replace","pseudo","mail","commentsDirective","bindToController","link","scope","console","log","restrict","directive","params","service"],"mappings":"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","file":"js/app-31aabebb2c.js","sourcesContent":["'use strict';\r\n\r\n(function() {\r\n    var app = angular.module('app', [\r\n        'ui.router',\r\n        'app.home',\r\n        'app.articles',\r\n        'ngStorage',\r\n        'ngMaterial'\r\n    ]);\r\n\r\n    bootstrapApplication();\r\n\r\n    /********************\r\n     * PRIVATE FUNCTIONS\r\n     *******************/\r\n\r\n    function bootstrapApplication() {\r\n        angular.element(document).ready(function() {\r\n            angular.bootstrap(document, ['app']);\r\n        });\r\n    }\r\n    return app;\r\n})();","'use strict';\n(function () {\n    angular.module('app')\n           .run();\n})();","/**\n * @ngdoc value\n *\n * @description\n *  Config the app module\n */\n\n'use strict';\n(function() {\n    angular\n        .module('app')\n        .config(['$compileProvider', function($compileProvider) {\n            //configure routeProvider as usual\n            $compileProvider.debugInfoEnabled(false);\n        }]);\n})();\n","var host_url = 'http://127.0.0.1:8080/';\r\n//var host_url = 'http://192.168.1.15:8080/blog-server/';","'use strict';\r\n(function () {\r\n    angular\r\n        .module('app')\r\n        .controller('Menu', ['$location', Menu]);\r\n\r\n    function Menu($location) {\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var viewModel = this;\r\n        viewModel.goToHome = goToHome;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function goToHome() {\r\n            $location.path('');\r\n        }\r\n\r\n        function goToPartners() {\r\n            $location.path('partners');\r\n        }\r\n    }\r\n})();\r\n","'use strict';\n(function () {\n    angular.module('app.home', [\n        'ngSanitize',\n        'ngMaterial'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.home')\n        .config(routerConfig);\n\n    function routerConfig ($stateProvider, $urlRouterProvider) {\n\n        function _transitionToEntryPoint ($state) {\n            $state.transitionTo('home');\n        }\n\n        $urlRouterProvider\n            .when('', _transitionToEntryPoint)\n            .otherwise('/404');\n\n        $stateProvider\n            .state('entryPoint', {\n                url: '/redirect',\n                controller: _transitionToEntryPoint\n            })\n            .state('home', {\n                url: '/',\n                views: {\n                    //header: {\n                    //    templateUrl: 'views/partials/login/header.html'\n                    //},\n                    '@': {\n                        templateUrl: 'home/views/home.html',\n                        controller: 'Home',\n                        controllerAs: 'ctrl',\n                        title: 'home',\n                        resolve: {\n                            articles: function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                   return data.articles;\n                                });\n                            },\n                            pagination: function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                    return data.pagination;\n                                });\n                            }\n                        }\n                    }\n                }\n            })\n            .state('404', {\n                url: '/404',\n                views: {\n                    '@': {\n                        templateUrl: 'common/views/404.html'\n                    }\n                }\n            });\n    }\n})();","'use strict';\r\n\r\n(function() {\r\n    var app = angular.module('app', [\r\n        'ui.router',\r\n        'app.home',\r\n        'app.articles',\r\n        'ngStorage',\r\n        'ngMaterial'\r\n    ]);\r\n\r\n    bootstrapApplication();\r\n\r\n    /********************\r\n     * PRIVATE FUNCTIONS\r\n     *******************/\r\n\r\n    function bootstrapApplication() {\r\n        angular.element(document).ready(function() {\r\n            angular.bootstrap(document, ['app']);\r\n        });\r\n    }\r\n    return app;\r\n})();\n'use strict';\n(function () {\n    angular.module('app')\n           .run();\n})();\n/**\n * @ngdoc value\n *\n * @description\n *  Config the app module\n */\n\n'use strict';\n(function() {\n    angular\n        .module('app')\n        .config(['$compileProvider', function($compileProvider) {\n            //configure routeProvider as usual\n            $compileProvider.debugInfoEnabled(false);\n        }]);\n})();\n\nvar host_url = 'http://127.0.0.1:8080/';\r\n//var host_url = 'http://192.168.1.15:8080/blog-server/';\n'use strict';\r\n(function () {\r\n    angular\r\n        .module('app')\r\n        .controller('Menu', ['$location', Menu]);\r\n\r\n    function Menu($location) {\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var viewModel = this;\r\n        viewModel.goToHome = goToHome;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function goToHome() {\r\n            $location.path('');\r\n        }\r\n\r\n        function goToPartners() {\r\n            $location.path('partners');\r\n        }\r\n    }\r\n})();\r\n\n'use strict';\n(function () {\n    angular.module('app.home', [\n        'ngSanitize',\n        'ngMaterial'\n    ]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app.home')\n        .config(routerConfig);\n\n    function routerConfig ($stateProvider, $urlRouterProvider) {\n\n        function _transitionToEntryPoint ($state) {\n            $state.transitionTo('home');\n        }\r\n        _transitionToEntryPoint.$inject = [\"$state\"];\n\n        $urlRouterProvider\n            .when('', _transitionToEntryPoint)\n            .otherwise('/404');\n\n        $stateProvider\n            .state('entryPoint', {\n                url: '/redirect',\n                controller: _transitionToEntryPoint\n            })\n            .state('home', {\n                url: '/',\n                views: {\n                    //header: {\n                    //    templateUrl: 'views/partials/login/header.html'\n                    //},\n                    '@': {\n                        templateUrl: 'home/views/home.html',\n                        controller: 'Home',\n                        controllerAs: 'ctrl',\n                        title: 'home',\n                        resolve: {\n                            articles: [\"articleFactory\", function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                   return data.articles;\n                                });\n                            }],\n                            pagination: [\"articleFactory\", function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                    return data.pagination;\n                                });\n                            }]\n                        }\n                    }\n                }\n            })\n            .state('404', {\n                url: '/404',\n                views: {\n                    '@': {\n                        templateUrl: 'common/views/404.html'\n                    }\n                }\n            });\n    }\r\n    routerConfig.$inject = [\"$stateProvider\", \"$urlRouterProvider\"];\n})();\n'use strict';\r\n(function () {\r\n    angular.module('app.home')\r\n        .factory('homeFactory', ['$http', HomeFactory]);\r\n\r\n    function HomeFactory($http) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchArticlesContent: fetchArticlesContent\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchArticlesContent() {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/articles',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req);\r\n        }\r\n    }\r\n})();\r\n\r\n\n'use strict';\r\n(function() {\r\n    angular\r\n        .module('app.home')\r\n        .controller('Home', ['$log', '$location', '$window', 'articleFactory', 'articles', 'pagination', Home]);\r\n\r\n    function Home($log, $location, $window, articleFactory, articles, pagination) {\r\n\r\n        $log.debug('[app.home] Loading Home controller');\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var viewModel = this;\r\n        viewModel.articles = articles;\r\n        viewModel.pagination = pagination;\r\n\r\n        viewModel.goToArticle = goToArticle;\r\n        viewModel.nextPage = nextPage;\r\n        viewModel.previousPage = previousPage;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function goToArticle(articleId) {\r\n            $location.path('article/' + articleId);\r\n            $window.scrollTo(0, 0);\r\n        }\r\n\r\n        function nextPage() {\r\n            var currentPage = viewModel.pagination.currentPage;\r\n            articleFactory.fetchArticles(currentPage + 1).then(function(data) {\r\n                viewModel.articles = data.articles;\r\n                viewModel.pagination = data.pagination;\r\n                $window.scrollTo(0, 0);\r\n            });\r\n        }\r\n\r\n        function previousPage() {\r\n            var currentPage = viewModel.pagination.currentPage;\r\n            articleFactory.fetchArticles(currentPage - 1).then(function(data) {\r\n                viewModel.articles = data.articles;\r\n                viewModel.pagination = data.pagination;\r\n                $window.scrollTo(0, 0);\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n'use strict';\r\n(function () {\r\n    angular.module('app.articles', [\r\n        'ngSanitize',\r\n        'ngMaterial',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n\n//'use strict';\r\n//(function() {\r\n//    angular\r\n//        .module('app.articles');\r\n//    //    .run(appRun);\r\n//    //\r\n//    //appRun.$inject = ['routerHelper'];\r\n//    //function appRun(routerHelper) {\r\n//    //    routerHelper.configureRoutes(getRoutes());\r\n//    //}\r\n//    //\r\n//    //function getRoutes() {\r\n//    //    return [\r\n//    //        {\r\n//    //            url: '/article/:articleId',\r\n//                config: {\r\n//                    templateUrl: 'articles/views/article.html',\r\n//                    controller: 'Article',\r\n//                    controllerAs: 'viewModel',\r\n//                    title: 'article'\r\n//    //            }\r\n//    //        }\r\n//    //    ];\r\n//    //}\r\n//})();\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.articles')\r\n        .config(articleRoute);\r\n\r\n    function articleRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('articles', {\r\n                url: '/article/:articleId',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'articles/views/article.html',\r\n                        controller: 'Article',\r\n                        controllerAs: 'viewModel',\r\n                        title: 'article',\r\n                        resolve: {\r\n                            article: [\"$stateParams\", \"articleFactory\", function ($stateParams, articleFactory) {\r\n                                return articleFactory.fetchArticleContent($stateParams.articleId);\r\n                            }],\r\n                            comments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByArticle($stateParams.articleId).then(function(data) {\r\n                                    return data.comments;\r\n                                });\r\n                            }],\r\n                            nbComments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByArticle($stateParams.articleId).then(function(data) {\r\n                                    return data.totalComments;\r\n                                });\r\n                            }]\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    articleRoute.$inject = [\"$stateProvider\"];\r\n})();\r\n\n/**\r\n * @ngdoc filter\r\n * @name moment\r\n *\r\n * @description\r\n *  Dates filter using moment.js\r\n *\r\n * */\r\n'use strict';\r\n(function () {\r\n    angular.module('app.articles')\r\n        .filter('moment', [momentFilter]);\r\n\r\n    function momentFilter() {\r\n        return function(input) {\r\n            return moment(input + '', 'x').format('D MMMM YYYY');\r\n        }\r\n    }\r\n})();\n'use strict';\r\n(function () {\r\n    angular.module('app.articles')\r\n        .factory('articleFactory', ['$http', ArticleFactory]);\r\n\r\n    function ArticleFactory($http) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchArticles: fetchArticles,\r\n            fetchArticleContent: fetchArticleContent,\r\n            insertView: insertView\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchArticles (page) {\r\n            return $http.get(host_url + 'api/articles/' + page).then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function fetchArticleContent (articleId) {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/articles/article/' + articleId,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req).then(function (response) {\r\n                return response.data.article[0];\r\n            });\r\n        }\r\n\r\n        function insertView (articleId) {\r\n            return $http.post(host_url + 'api/articles/article/' + articleId + '/view');\r\n        }\r\n    }\r\n})();\r\n\r\n\n'use strict';\r\n(function () {\r\n    angular\r\n        .module('app.articles')\r\n        .controller('Article', ['$sce', 'article', 'articleFactory', 'comments', 'nbComments', Article]);\r\n\r\n    function Article($sce, article, articleFactory, comments, nbComments) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var vm = this;\r\n        vm.recipe = article;\r\n        vm.comments = comments;\r\n        vm.nbComments = nbComments;\r\n\r\n        _init();\r\n\r\n        function _init() {\r\n            articleFactory.insertView(vm.recipe.id).then(function() {\r\n                angular.forEach(vm.comments, function (comment) {\r\n                    comment.text = $sce.trustAsHtml(comment.text);\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('CommentsController', ['commentsService', CommentsController]);\r\n\r\n    function CommentsController (commentsService) {\r\n        var vm = this;\r\n\r\n        vm.comment = {\r\n            pseudo: '',\r\n            mail: '',\r\n            url: '',\r\n            text: ''\r\n        };\r\n        vm.sendComment = sendComment;\r\n\r\n        function sendComment () {\r\n            vm.comment.text = vm.comment.text.replace(/\\n/g, '<br />');\r\n            commentsService.sendComment(vm.comment, vm.articleId).then(function () {\r\n                vm.comment = {\r\n                    pseudo: '',\r\n                    mail: '',\r\n                    url: '',\r\n                    text: ''\r\n                };\r\n                commentsService.getCommentsByArticle(vm.articleId).then(function (data) {\r\n                    vm.comments = data.comments;\r\n                    vm.nbComments = data.totalComments;\r\n                });\r\n\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.articles')\r\n        .directive('comments', commentsDirective);\r\n\r\n    function commentsDirective () {\r\n        return {\r\n            bindToController: true,\r\n            controller: 'CommentsController',\r\n            controllerAs: 'ctrl',\r\n            link: function link (scope) {\r\n                console.log(\"comments initialization\")\r\n                console.log(scope.comments)\r\n            },\r\n            restrict: 'E',\r\n            scope: {\r\n                comments: '=',\r\n                nbComments: '=',\r\n                articleId: '='\r\n            },\r\n            templateUrl: 'articles/comments/views/comments.html'\r\n        };\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.articles')\r\n        .service('commentsService', commentsService);\r\n\r\n    function commentsService ($http) {\r\n        function getCommentsByArticle (articleId) {\r\n            return $http.get(host_url + 'api/comments/' + articleId)\r\n                .then(function (response) {\r\n                    return response.data;\r\n                });\r\n        }\r\n\r\n\r\n        function sendComment (comment, articleId) {\r\n            //return $http.post(host_url + 'api/comments/' + articleId, comment)\r\n            //    .then(function (response) {\r\n            //        return {}; // response.data;\r\n            //    });\r\n            return $http({\r\n                url: host_url + 'api/comments/' + articleId,\r\n                method: 'POST',\r\n                params: comment,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            });\r\n        }\r\n        return {\r\n            getCommentsByArticle: getCommentsByArticle,\r\n            sendComment: sendComment\r\n        };\r\n    }\r\n    commentsService.$inject = [\"$http\"];\r\n})();\r\n","'use strict';\r\n(function () {\r\n    angular.module('app.home')\r\n        .factory('homeFactory', ['$http', HomeFactory]);\r\n\r\n    function HomeFactory($http) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchArticlesContent: fetchArticlesContent\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchArticlesContent() {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/articles',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req);\r\n        }\r\n    }\r\n})();\r\n\r\n","'use strict';\r\n(function() {\r\n    angular\r\n        .module('app.home')\r\n        .controller('Home', ['$log', '$location', '$window', 'articleFactory', 'articles', 'pagination', Home]);\r\n\r\n    function Home($log, $location, $window, articleFactory, articles, pagination) {\r\n\r\n        $log.debug('[app.home] Loading Home controller');\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var viewModel = this;\r\n        viewModel.articles = articles;\r\n        viewModel.pagination = pagination;\r\n\r\n        viewModel.goToArticle = goToArticle;\r\n        viewModel.nextPage = nextPage;\r\n        viewModel.previousPage = previousPage;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function goToArticle(articleId) {\r\n            $location.path('article/' + articleId);\r\n            $window.scrollTo(0, 0);\r\n        }\r\n\r\n        function nextPage() {\r\n            var currentPage = viewModel.pagination.currentPage;\r\n            articleFactory.fetchArticles(currentPage + 1).then(function(data) {\r\n                viewModel.articles = data.articles;\r\n                viewModel.pagination = data.pagination;\r\n                $window.scrollTo(0, 0);\r\n            });\r\n        }\r\n\r\n        function previousPage() {\r\n            var currentPage = viewModel.pagination.currentPage;\r\n            articleFactory.fetchArticles(currentPage - 1).then(function(data) {\r\n                viewModel.articles = data.articles;\r\n                viewModel.pagination = data.pagination;\r\n                $window.scrollTo(0, 0);\r\n            });\r\n        }\r\n    }\r\n})();\r\n","'use strict';\r\n(function () {\r\n    angular.module('app.articles', [\r\n        'ngSanitize',\r\n        'ngMaterial',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n","//'use strict';\r\n//(function() {\r\n//    angular\r\n//        .module('app.articles');\r\n//    //    .run(appRun);\r\n//    //\r\n//    //appRun.$inject = ['routerHelper'];\r\n//    //function appRun(routerHelper) {\r\n//    //    routerHelper.configureRoutes(getRoutes());\r\n//    //}\r\n//    //\r\n//    //function getRoutes() {\r\n//    //    return [\r\n//    //        {\r\n//    //            url: '/article/:articleId',\r\n//                config: {\r\n//                    templateUrl: 'articles/views/article.html',\r\n//                    controller: 'Article',\r\n//                    controllerAs: 'viewModel',\r\n//                    title: 'article'\r\n//    //            }\r\n//    //        }\r\n//    //    ];\r\n//    //}\r\n//})();\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.articles')\r\n        .config(articleRoute);\r\n\r\n    function articleRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('articles', {\r\n                url: '/article/:articleId',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'articles/views/article.html',\r\n                        controller: 'Article',\r\n                        controllerAs: 'viewModel',\r\n                        title: 'article',\r\n                        resolve: {\r\n                            article: function ($stateParams, articleFactory) {\r\n                                return articleFactory.fetchArticleContent($stateParams.articleId);\r\n                            },\r\n                            comments: function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByArticle($stateParams.articleId).then(function(data) {\r\n                                    return data.comments;\r\n                                });\r\n                            },\r\n                            nbComments: function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByArticle($stateParams.articleId).then(function(data) {\r\n                                    return data.totalComments;\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n})();\r\n","/**\r\n * @ngdoc filter\r\n * @name moment\r\n *\r\n * @description\r\n *  Dates filter using moment.js\r\n *\r\n * */\r\n'use strict';\r\n(function () {\r\n    angular.module('app.articles')\r\n        .filter('moment', [momentFilter]);\r\n\r\n    function momentFilter() {\r\n        return function(input) {\r\n            return moment(input + '', 'x').format('D MMMM YYYY');\r\n        }\r\n    }\r\n})();","'use strict';\r\n(function () {\r\n    angular.module('app.articles')\r\n        .factory('articleFactory', ['$http', ArticleFactory]);\r\n\r\n    function ArticleFactory($http) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchArticles: fetchArticles,\r\n            fetchArticleContent: fetchArticleContent,\r\n            insertView: insertView\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchArticles (page) {\r\n            return $http.get(host_url + 'api/articles/' + page).then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function fetchArticleContent (articleId) {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/articles/article/' + articleId,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req).then(function (response) {\r\n                return response.data.article[0];\r\n            });\r\n        }\r\n\r\n        function insertView (articleId) {\r\n            return $http.post(host_url + 'api/articles/article/' + articleId + '/view');\r\n        }\r\n    }\r\n})();\r\n\r\n","'use strict';\r\n(function () {\r\n    angular\r\n        .module('app.articles')\r\n        .controller('Article', ['$sce', 'article', 'articleFactory', 'comments', 'nbComments', Article]);\r\n\r\n    function Article($sce, article, articleFactory, comments, nbComments) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var vm = this;\r\n        vm.recipe = article;\r\n        vm.comments = comments;\r\n        vm.nbComments = nbComments;\r\n\r\n        _init();\r\n\r\n        function _init() {\r\n            articleFactory.insertView(vm.recipe.id).then(function() {\r\n                angular.forEach(vm.comments, function (comment) {\r\n                    comment.text = $sce.trustAsHtml(comment.text);\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('CommentsController', ['commentsService', CommentsController]);\r\n\r\n    function CommentsController (commentsService) {\r\n        var vm = this;\r\n\r\n        vm.comment = {\r\n            pseudo: '',\r\n            mail: '',\r\n            url: '',\r\n            text: ''\r\n        };\r\n        vm.sendComment = sendComment;\r\n\r\n        function sendComment () {\r\n            vm.comment.text = vm.comment.text.replace(/\\n/g, '<br />');\r\n            commentsService.sendComment(vm.comment, vm.articleId).then(function () {\r\n                vm.comment = {\r\n                    pseudo: '',\r\n                    mail: '',\r\n                    url: '',\r\n                    text: ''\r\n                };\r\n                commentsService.getCommentsByArticle(vm.articleId).then(function (data) {\r\n                    vm.comments = data.comments;\r\n                    vm.nbComments = data.totalComments;\r\n                });\r\n\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.articles')\r\n        .directive('comments', commentsDirective);\r\n\r\n    function commentsDirective () {\r\n        return {\r\n            bindToController: true,\r\n            controller: 'CommentsController',\r\n            controllerAs: 'ctrl',\r\n            link: function link (scope) {\r\n                console.log(\"comments initialization\")\r\n                console.log(scope.comments)\r\n            },\r\n            restrict: 'E',\r\n            scope: {\r\n                comments: '=',\r\n                nbComments: '=',\r\n                articleId: '='\r\n            },\r\n            templateUrl: 'articles/comments/views/comments.html'\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.articles')\r\n        .service('commentsService', commentsService);\r\n\r\n    function commentsService ($http) {\r\n        function getCommentsByArticle (articleId) {\r\n            return $http.get(host_url + 'api/comments/' + articleId)\r\n                .then(function (response) {\r\n                    return response.data;\r\n                });\r\n        }\r\n\r\n\r\n        function sendComment (comment, articleId) {\r\n            //return $http.post(host_url + 'api/comments/' + articleId, comment)\r\n            //    .then(function (response) {\r\n            //        return {}; // response.data;\r\n            //    });\r\n            return $http({\r\n                url: host_url + 'api/comments/' + articleId,\r\n                method: 'POST',\r\n                params: comment,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            });\r\n        }\r\n        return {\r\n            getCommentsByArticle: getCommentsByArticle,\r\n            sendComment: sendComment\r\n        };\r\n    }\r\n})();\r\n"],"sourceRoot":"/source/"}