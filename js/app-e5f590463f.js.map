{"version":3,"sources":["app/app.module.js","app/app.run.js","app/app.config.js","app/common/constants.js","app/common/menu.controller.js","app/partners/partners.module.js","app/partners/config.route.js","js/app.js","app/contact/contact.module.js","app/contact/config.route.js","app/index/index.module.js","app/index/config.route.js","app/index/index.factory.js","app/index/index.controller.js","app/home/home.module.js","app/home/config.route.js","app/home/home.factory.js","app/home/home.controller.js","app/sidebar/sidebar.controller.js","app/sidebar/sidebar.directive.js","app/sidebar/sidebar.service.js","app/articles/article.module.js","app/articles/config.route.js","app/articles/articles.factory.js","app/articles/articles.controller.js","app/partner/partner.module.js","app/partner/config.route.js","app/partner/partner.factory.js","app/partner/partner.controller.js","app/common/filters/moment.filter.js","app/articles/comments/comments.controller.js","app/articles/comments/comments.directive.js","app/articles/comments/comments.service.js"],"names":["bootstrapApplication","angular","element","document","ready","bootstrap","app","module","run","config","$compileProvider","debugInfoEnabled","host_url","Menu","$location","$state","goToHome","go","goToIndex","goToPartners","goToContact","viewModel","this","controller","partnersRoute","$stateProvider","state","url","views","@","templateUrl","title","$inject","contactRoute","indexRoute","controllerAs","IndexFactory","$http","fetchRecipes","get","then","response","data","factory","Index","$window","indexFactory","_init","console","log","vm","recipes","goToArticle","articleLabel","href","open","scrollTo","routerConfig","$urlRouterProvider","_transitionToEntryPoint","transitionTo","when","otherwise","resolve","articles","articleFactory","fetchArticles","pagination","HomeFactory","fetchArticlesContent","req","method","headers","Content-Type","fetchPictures","Home","$log","goToPartner","partnerLabel","nextPage","currentPage","previousPage","debug","SidebarController","sidebarService","getInstagramPictures","medias","sidebarDirective","bindToController","link","scope","restrict","directive","accessToken","userId","count","jsonp","service","articleRoute","article","$stateParams","fetchArticleContent","comments","commentsService","getCommentsByArticle","nbComments","totalComments","ArticleFactory","page","insertView","articleId","post","Article","$sce","recipe","id","forEach","comment","text","trustAsHtml","partnerRoute","partner","partnerFactory","fetchPartnerContent","getCommentsByPartner","PartnerFactory","partnerId","Partner","momentFilter","input","moment","format","filter","CommentsController","$sanitize","toastr","sendComment","replace","isRecipe","pseudo","mail","success","sendPartnerComment","commentsDirective","params"],"mappings":"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","file":"js/app-e5f590463f.js","sourcesContent":["'use strict';\n\n(function() {\n    var app = angular.module('app', [\n        'ui.router',\n        'app.home',\n        'app.articles',\n        'app.partners',\n        'app.partner',\n        'app.contact',\n        'app.index',\n        'ngSanitize',\n        'ngStorage',\n        'ngMaterial',\n        'ngAnimate',\n        'toastr'\n    ]);\n\n    bootstrapApplication();\n\n    /********************\n     * PRIVATE FUNCTIONS\n     *******************/\n\n    function bootstrapApplication() {\n        angular.element(document).ready(function() {\n            angular.bootstrap(document, ['app']);\n        });\n    }\n    return app;\n})();\n","'use strict';\n(function () {\n    angular.module('app')\n           .run();\n})();","/**\n * @ngdoc value\n *\n * @description\n *  Config the app module\n */\n\n'use strict';\n(function() {\n    angular\n        .module('app')\n        .config(['$compileProvider', function($compileProvider) {\n            //configure routeProvider as usual\n            $compileProvider.debugInfoEnabled(false);\n        }]);\n})();\n","//var host_url = 'http://127.0.0.1:8080/';\n//var host_url = 'http://192.168.1.15:8080/blog-server/';\nvar host_url = 'http://ec2-52-42-109-64.us-west-2.compute.amazonaws.com:8080/blog-server/';\n\n\n","'use strict';\n(function () {\n    angular\n        .module('app')\n        .controller('Menu', ['$location', '$state', Menu]);\n\n    function Menu($location, $state) {\n\n        /***************\n         * DECLARATIONS\n         **************/\n\n        var viewModel = this;\n        viewModel.goToHome      = goToHome;\n        viewModel.goToIndex     = goToIndex;\n        viewModel.goToPartners  = goToPartners;\n        viewModel.goToContact   = goToContact;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function goToHome() {\n            $state.go('home');\n        }\n\n        function goToIndex() {\n            $state.go('index');\n        }\n\n        function goToPartners() {\n            $state.go('partners')\n        }\n\n        function goToContact() {\n            $state.go('contact');\n        }\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.partners', [\n        'ngSanitize',\n        'ngRoute'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.partners')\n        .config(partnersRoute);\n\n    function partnersRoute ($stateProvider) {\n        $stateProvider\n            .state('partners', {\n                url: '/partners',\n                views: {\n                    '@': {\n                        templateUrl: 'partners/views/partners.html',\n                        title: 'partners'\n                    }\n                }\n            });\n    }\n})();\n","'use strict';\n\n(function() {\n    var app = angular.module('app', [\n        'ui.router',\n        'app.home',\n        'app.articles',\n        'app.partners',\n        'app.partner',\n        'app.contact',\n        'app.index',\n        'ngSanitize',\n        'ngStorage',\n        'ngMaterial',\n        'ngAnimate',\n        'toastr'\n    ]);\n\n    bootstrapApplication();\n\n    /********************\n     * PRIVATE FUNCTIONS\n     *******************/\n\n    function bootstrapApplication() {\n        angular.element(document).ready(function() {\n            angular.bootstrap(document, ['app']);\n        });\n    }\n    return app;\n})();\n\n'use strict';\n(function () {\n    angular.module('app')\n           .run();\n})();\n/**\n * @ngdoc value\n *\n * @description\n *  Config the app module\n */\n\n'use strict';\n(function() {\n    angular\n        .module('app')\n        .config(['$compileProvider', function($compileProvider) {\n            //configure routeProvider as usual\n            $compileProvider.debugInfoEnabled(false);\n        }]);\n})();\n\n//var host_url = 'http://127.0.0.1:8080/';\n//var host_url = 'http://192.168.1.15:8080/blog-server/';\nvar host_url = 'http://ec2-52-42-109-64.us-west-2.compute.amazonaws.com:8080/blog-server/';\n\n\n\n'use strict';\n(function () {\n    angular\n        .module('app')\n        .controller('Menu', ['$location', '$state', Menu]);\n\n    function Menu($location, $state) {\n\n        /***************\n         * DECLARATIONS\n         **************/\n\n        var viewModel = this;\n        viewModel.goToHome      = goToHome;\n        viewModel.goToIndex     = goToIndex;\n        viewModel.goToPartners  = goToPartners;\n        viewModel.goToContact   = goToContact;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function goToHome() {\n            $state.go('home');\n        }\n\n        function goToIndex() {\n            $state.go('index');\n        }\n\n        function goToPartners() {\n            $state.go('partners')\n        }\n\n        function goToContact() {\n            $state.go('contact');\n        }\n    }\n})();\n\n'use strict';\n(function () {\n    angular.module('app.partners', [\n        'ngSanitize',\n        'ngRoute'\n    ]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app.partners')\n        .config(partnersRoute);\n\n    function partnersRoute ($stateProvider) {\n        $stateProvider\n            .state('partners', {\n                url: '/partners',\n                views: {\n                    '@': {\n                        templateUrl: 'partners/views/partners.html',\n                        title: 'partners'\n                    }\n                }\n            });\n    }\n    partnersRoute.$inject = [\"$stateProvider\"];\n})();\n\n'use strict';\n(function () {\n    angular.module('app.contact', [\n        'ngSanitize',\n        'ngRoute'\n    ]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app.contact')\n        .config(contactRoute);\n\n    function contactRoute ($stateProvider) {\n        $stateProvider\n            .state('contact', {\n                url: '/contact',\n                views: {\n                    '@': {\n                        templateUrl: 'contact/views/contact.html',\n                        title: 'contact'\n                    }\n                }\n            });\n    }\n    contactRoute.$inject = [\"$stateProvider\"];\n})();\n\n'use strict';\n(function () {\n    angular.module('app.index', [\n        'ngSanitize',\n        'ngRoute'\n    ]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app.index')\n        .config(indexRoute);\n\n    function indexRoute ($stateProvider) {\n        $stateProvider\n            .state('index', {\n                url: '/index',\n                views: {\n                    '@': {\n                        templateUrl: 'index/views/index.html',\n                        controller: 'Index',\n                        controllerAs: 'ctrl',\n                        title: 'index'\n                    }\n                }\n            });\n    }\n    indexRoute.$inject = [\"$stateProvider\"];\n})();\n\n'use strict';\n(function () {\n    angular.module('app.index')\n        .factory('indexFactory', ['$http', IndexFactory]);\n\n    function IndexFactory($http) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var factory = {\n            //Variables\n\n            //Functions\n            fetchRecipes: fetchRecipes\n        };\n\n        return factory;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function fetchRecipes () {\n            return $http.get(host_url + 'api/recipes').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n\n'use strict';\n(function () {\n    angular\n        .module('app.index')\n        .controller('Index', ['$state', '$window', 'indexFactory', Index]);\n\n    function Index($state, $window, indexFactory) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var vm = this;\n\n        vm.goToArticle = goToArticle;\n\n        _init();\n\n        function _init() {\n            console.log('la')\n            indexFactory.fetchRecipes().then(function(data) {\n                vm.recipes = data.recipes;\n            });\n        }\n\n        function goToArticle(articleLabel) {\n            var url = $state.href('articles', {'articleLabel': articleLabel});\n            $window.open(url,'_blank');\n            $window.scrollTo(0, 0);\n        }\n\n    }\n})();\n\n'use strict';\n(function () {\n    angular.module('app.home', [\n        'ngSanitize',\n        'ngMaterial'\n    ]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app.home')\n        .config(routerConfig);\n\n    function routerConfig ($stateProvider, $urlRouterProvider) {\n\n        function _transitionToEntryPoint ($state) {\n            $state.transitionTo('home');\n        }\n        _transitionToEntryPoint.$inject = [\"$state\"];\n\n        $urlRouterProvider\n            .when('', _transitionToEntryPoint)\n            .otherwise('/404');\n\n        $stateProvider\n            .state('entryPoint', {\n                url: '/redirect',\n                controller: _transitionToEntryPoint\n            })\n            .state('home', {\n                url: '/',\n                views: {\n                    '@': {\n                        templateUrl: 'home/views/home.html',\n                        controller: 'Home',\n                        controllerAs: 'ctrl',\n                        title: 'home',\n                        resolve: {\n                            articles: [\"articleFactory\", function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                   return data.articles;\n                                });\n                            }],\n                            pagination: [\"articleFactory\", function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                    return data.pagination;\n                                });\n                            }]\n                        }\n                    }\n                }\n            })\n            .state('404', {\n                url: '/404',\n                views: {\n                    '@': {\n                        templateUrl: 'common/views/404.html'\n                    }\n                }\n            });\n    }\n    routerConfig.$inject = [\"$stateProvider\", \"$urlRouterProvider\"];\n})();\n'use strict';\n(function () {\n    angular.module('app.home')\n        .factory('homeFactory', ['$http', HomeFactory]);\n\n    function HomeFactory($http) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var factory = {\n            //Variables\n\n            //Functions\n            fetchArticlesContent: fetchArticlesContent,\n            fetchPictures: fetchPictures\n        };\n\n        return factory;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function fetchArticlesContent() {\n            var req = {\n                method: 'GET',\n                url: host_url + 'api/articles',\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            };\n            return $http(req);\n        }\n    }\n})();\n\n\n'use strict';\n(function () {\n    angular\n        .module('app.home')\n        .controller('Home', ['$log', '$state', '$window', 'articleFactory', 'articles', 'pagination', Home]);\n\n    function Home($log, $state, $window, articleFactory, articles, pagination) {\n\n        $log.debug('[app.home] Loading Home controller');\n\n        /***************\n         * DECLARATIONS\n         **************/\n\n        var viewModel = this;\n        viewModel.articles = articles;\n        viewModel.pagination = pagination;\n\n        viewModel.goToArticle = goToArticle;\n        viewModel.goToPartner = goToPartner;\n        viewModel.nextPage = nextPage;\n        viewModel.previousPage = previousPage;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function goToArticle(articleLabel) {\n            var url = $state.href('articles', {'articleLabel': articleLabel});\n            $window.open(url,'_blank');\n            $window.scrollTo(0, 0);\n        }\n\n        function goToPartner(partnerLabel) {\n            var url = $state.href('partner', {'partnerLabel': partnerLabel});\n            $window.open(url,'_blank');\n            $window.scrollTo(0, 0);\n        }\n\n        function nextPage() {\n            var currentPage = viewModel.pagination.currentPage;\n            articleFactory.fetchArticles(currentPage + 1).then(function (data) {\n                viewModel.articles = data.articles;\n                viewModel.pagination = data.pagination;\n                $window.scrollTo(0, 0);\n            });\n        }\n\n        function previousPage() {\n            var currentPage = viewModel.pagination.currentPage;\n            articleFactory.fetchArticles(currentPage - 1).then(function (data) {\n                viewModel.articles = data.articles;\n                viewModel.pagination = data.pagination;\n                $window.scrollTo(0, 0);\n            });\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('SidebarController', ['sidebarService', SidebarController]);\n\n    function SidebarController (sidebarService) {\n        var vm = this;\n        vm.medias = [];\n\n        _init();\n\n        function _init() {\n            sidebarService.getInstagramPictures().then(function(medias) {\n                vm.medias = medias;\n            });\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .directive('sidebar', sidebarDirective);\n\n    function sidebarDirective () {\n        return {\n            bindToController: true,\n            controller: 'SidebarController',\n            controllerAs: 'ctrl',\n            link: function link (scope) {},\n            restrict: 'E',\n            scope: {},\n            templateUrl: 'sidebar/views/sidebar.html'\n        };\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .service('sidebarService', ['$http', sidebarService]);\n\n    function sidebarService ($http) {\n\n        function getInstagramPictures () {\n            var accessToken = '146070981.4dd8feb.97c8fd8acf924b3fb641f160ba7a3589';\n            var userId = 4771193178; // unzestedegourmandises\n            var count = 8;\n            var url = 'https://api.instagram.com/v1/users/' + userId + '/media/recent';\n\n            url += '?access_token=' + accessToken + '&scope=public_content&count=' + count + '&callback=JSON_CALLBACK' ;\n            return $http.jsonp(url).then(function(response) {\n                return response.data.data;\n            });\n\n        }\n\n        return {\n            getInstagramPictures: getInstagramPictures\n        };\n    }\n})();\n\n'use strict';\n(function () {\n    angular.module('app.articles', [\n        'ngSanitize',\n        'ngMaterial',\n        'ngRoute'\n    ]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app.articles')\n        .config(articleRoute);\n\n    function articleRoute ($stateProvider) {\n        $stateProvider\n            .state('articles', {\n                url: '/article/:articleLabel',\n                views: {\n                    '@': {\n                        templateUrl: 'articles/views/article.html',\n                        controller: 'Article',\n                        controllerAs: 'viewModel',\n                        title: 'article',\n                        resolve: {\n                            article: [\"$stateParams\", \"articleFactory\", function ($stateParams, articleFactory) {\n                                return articleFactory.fetchArticleContent($stateParams.articleLabel);\n                            }],\n                            comments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\n                                return commentsService.getCommentsByArticle($stateParams.articleLabel).then(function(data) {\n                                    return data.comments;\n                                });\n                            }],\n                            nbComments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\n                                return commentsService.getCommentsByArticle($stateParams.articleLabel).then(function(data) {\n                                    return data.totalComments;\n                                });\n                            }]\n                        }\n                    }\n                }\n            });\n    }\n    articleRoute.$inject = [\"$stateProvider\"];\n})();\n\n'use strict';\n(function () {\n    angular.module('app.articles')\n        .factory('articleFactory', ['$http', ArticleFactory]);\n\n    function ArticleFactory($http) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var factory = {\n            //Variables\n\n            //Functions\n            fetchArticles: fetchArticles,\n            fetchArticleContent: fetchArticleContent,\n            insertView: insertView\n        };\n\n        return factory;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function fetchArticles (page) {\n            return $http.get(host_url + 'api/articles/' + page).then(function (response) {\n                return response.data;\n            });\n        }\n\n        function fetchArticleContent (articleLabel) {\n            var req = {\n                method: 'GET',\n                url: host_url + 'api/articles/article/' + articleLabel,\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            };\n            return $http(req).then(function (response) {\n                return response.data.article[0];\n            });\n        }\n\n        function insertView (articleId) {\n            return $http.post(host_url + 'api/articles/article/' + articleId + '/view');\n        }\n    }\n})();\n\n\n'use strict';\n(function () {\n    angular\n        .module('app.articles')\n        .controller('Article', ['$sce', 'article', 'articleFactory', 'comments', 'nbComments', Article]);\n\n    function Article($sce, article, articleFactory, comments, nbComments) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var vm = this;\n        vm.recipe = article;\n        vm.comments = comments;\n        vm.nbComments = nbComments;\n\n        _init();\n\n        function _init() {\n            articleFactory.insertView(vm.recipe.id).then(function() {\n                angular.forEach(vm.comments, function (comment) {\n                    comment.text = $sce.trustAsHtml(comment.text);\n                });\n            });\n        }\n    }\n})();\n\n'use strict';\n(function () {\n    angular.module('app.partner', [\n        'ngSanitize',\n        'ngMaterial',\n        'ngRoute'\n    ]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app.partner')\n        .config(partnerRoute);\n\n    function partnerRoute ($stateProvider) {\n        $stateProvider\n            .state('partner', {\n                url: '/partner/:partnerLabel',\n                views: {\n                    '@': {\n                        templateUrl: 'partner/views/partner.html',\n                        controller: 'Partner',\n                        controllerAs: 'viewModel',\n                        title: 'partner',\n                        resolve: {\n                            partner: [\"$stateParams\", \"partnerFactory\", function ($stateParams, partnerFactory) {\n                                return partnerFactory.fetchPartnerContent($stateParams.partnerLabel);\n                            }],\n                            comments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\n                                return commentsService.getCommentsByPartner($stateParams.partnerLabel).then(function(data) {\n                                    return data.comments;\n                                });\n                            }],\n                            nbComments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\n                                return commentsService.getCommentsByPartner($stateParams.partnerLabel).then(function(data) {\n                                    return data.totalComments;\n                                });\n                            }]\n                        }\n                    }\n                }\n            });\n    }\n    partnerRoute.$inject = [\"$stateProvider\"];\n})();\n\n'use strict';\n(function () {\n    angular.module('app.partner')\n        .factory('partnerFactory', ['$http', PartnerFactory]);\n\n    function PartnerFactory($http) {\n\n        /***************\n         * DECLARATIONS\n         **************/\n\n        var factory = {\n            //Variables\n\n            //Functions\n            fetchPartnerContent: fetchPartnerContent,\n            insertView: insertView\n        };\n\n        return factory;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function fetchPartnerContent (partnerLabel) {\n            var req = {\n                method: 'GET',\n                url: host_url + 'api/partners/partner/' + partnerLabel,\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            };\n            return $http(req).then(function (response) {\n                return response.data.partner[0];\n            });\n        }\n\n        function insertView (partnerId) {\n            return $http.post(host_url + 'api/partners/partner/' + partnerId + '/view');\n        }\n    }\n})();\n\n\n'use strict';\n(function () {\n    angular\n        .module('app.partner')\n        .controller('Partner', ['$sce', 'partner', 'partnerFactory', 'comments', 'nbComments', Partner]);\n\n    function Partner($sce, partner, partnerFactory, comments, nbComments) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var vm = this;\n        vm.partner = partner;\n        vm.comments = comments;\n        vm.nbComments = nbComments;\n\n        _init();\n\n        function _init() {\n            partnerFactory.insertView(vm.partner.id).then(function() {\n                angular.forEach(vm.comments, function (comment) {\n                    comment.text = $sce.trustAsHtml(comment.text);\n                });\n            });\n        }\n    }\n})();\n\n/**\n * @ngdoc filter\n * @name moment\n *\n * @description\n *  Dates filter using moment.js\n *\n * */\n'use strict';\n(function () {\n    angular.module('app')\n        .filter('moment', [momentFilter]);\n\n    function momentFilter() {\n        return function(input) {\n            return moment(input + '', 'x').format('D MMMM YYYY');\n        }\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('CommentsController', ['$sanitize', 'commentsService', 'toastr', CommentsController]);\n\n    function CommentsController ($sanitize, commentsService, toastr) {\n        var vm = this;\n\n        vm.comment = {\n            pseudo: '',\n            mail: '',\n            url: '',\n            text: ''\n        };\n        vm.sendComment = sendComment;\n\n        function sendComment () {\n            var comment = $sanitize(vm.comment.text);\n            vm.comment.text = comment.replace(/\\n/g, '<br />');\n            if (vm.isRecipe) {\n                commentsService.sendComment(vm.comment, vm.articleId).then(function () {\n                    vm.comment = {\n                        pseudo: '',\n                        mail: '',\n                        url: '',\n                        text: ''\n                    };\n                    commentsService.getCommentsByArticle(vm.articleLabel).then(function (data) {\n                        vm.comments = data.comments;\n                        vm.nbComments = data.totalComments;\n                    });\n                    toastr.success('Commentaire envoyé !');\n                });\n            } else {\n                commentsService.sendPartnerComment(vm.comment, vm.articleId).then(function () {\n                    vm.comment = {\n                        pseudo: '',\n                        mail: '',\n                        url: '',\n                        text: ''\n                    };\n                    commentsService.getCommentsByPartner(vm.articleLabel).then(function (data) {\n                        vm.comments = data.comments;\n                        vm.nbComments = data.totalComments;\n                    });\n                    toastr.success('Commentaire envoyé !');\n                });\n            }\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .directive('comments', commentsDirective);\n\n    function commentsDirective () {\n        return {\n            bindToController: true,\n            controller: 'CommentsController',\n            controllerAs: 'ctrl',\n            link: function link (scope) {},\n            restrict: 'E',\n            scope: {\n                comments: '=',\n                nbComments: '=',\n                articleId: '=',\n                articleLabel: '=',\n                isRecipe: '='\n            },\n            templateUrl: 'articles/comments/views/comments.html'\n        };\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .service('commentsService', ['$http', commentsService]);\n\n    function commentsService ($http) {\n        function getCommentsByArticle (articleLabel) {\n            return $http.get(host_url + 'api/comments/' + articleLabel)\n                .then(function (response) {\n                    return response.data;\n                });\n        }\n\n        function getCommentsByPartner (partnerLabel) {\n            return $http.get(host_url + 'api/comments/partner/' + partnerLabel)\n                .then(function (response) {\n                    return response.data;\n                });\n        }\n\n        function sendComment (comment, articleId) {\n            return $http({\n                url: host_url + 'api/comments/' + articleId,\n                method: 'POST',\n                params: comment,\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            });\n        }\n\n        function sendPartnerComment (comment, partnerId) {\n            return $http({\n                url: host_url + 'api/comments/partner/' + partnerId,\n                method: 'POST',\n                params: comment,\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            });\n        }\n\n        return {\n            getCommentsByArticle: getCommentsByArticle,\n            getCommentsByPartner: getCommentsByPartner,\n            sendComment: sendComment,\n            sendPartnerComment: sendPartnerComment\n        };\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.contact', [\n        'ngSanitize',\n        'ngRoute'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.contact')\n        .config(contactRoute);\n\n    function contactRoute ($stateProvider) {\n        $stateProvider\n            .state('contact', {\n                url: '/contact',\n                views: {\n                    '@': {\n                        templateUrl: 'contact/views/contact.html',\n                        title: 'contact'\n                    }\n                }\n            });\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.index', [\n        'ngSanitize',\n        'ngRoute'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.index')\n        .config(indexRoute);\n\n    function indexRoute ($stateProvider) {\n        $stateProvider\n            .state('index', {\n                url: '/index',\n                views: {\n                    '@': {\n                        templateUrl: 'index/views/index.html',\n                        controller: 'Index',\n                        controllerAs: 'ctrl',\n                        title: 'index'\n                    }\n                }\n            });\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.index')\n        .factory('indexFactory', ['$http', IndexFactory]);\n\n    function IndexFactory($http) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var factory = {\n            //Variables\n\n            //Functions\n            fetchRecipes: fetchRecipes\n        };\n\n        return factory;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function fetchRecipes () {\n            return $http.get(host_url + 'api/recipes').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n","'use strict';\n(function () {\n    angular\n        .module('app.index')\n        .controller('Index', ['$state', '$window', 'indexFactory', Index]);\n\n    function Index($state, $window, indexFactory) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var vm = this;\n\n        vm.goToArticle = goToArticle;\n\n        _init();\n\n        function _init() {\n            console.log('la')\n            indexFactory.fetchRecipes().then(function(data) {\n                vm.recipes = data.recipes;\n            });\n        }\n\n        function goToArticle(articleLabel) {\n            var url = $state.href('articles', {'articleLabel': articleLabel});\n            $window.open(url,'_blank');\n            $window.scrollTo(0, 0);\n        }\n\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.home', [\n        'ngSanitize',\n        'ngMaterial'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.home')\n        .config(routerConfig);\n\n    function routerConfig ($stateProvider, $urlRouterProvider) {\n\n        function _transitionToEntryPoint ($state) {\n            $state.transitionTo('home');\n        }\n\n        $urlRouterProvider\n            .when('', _transitionToEntryPoint)\n            .otherwise('/404');\n\n        $stateProvider\n            .state('entryPoint', {\n                url: '/redirect',\n                controller: _transitionToEntryPoint\n            })\n            .state('home', {\n                url: '/',\n                views: {\n                    '@': {\n                        templateUrl: 'home/views/home.html',\n                        controller: 'Home',\n                        controllerAs: 'ctrl',\n                        title: 'home',\n                        resolve: {\n                            articles: function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                   return data.articles;\n                                });\n                            },\n                            pagination: function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                    return data.pagination;\n                                });\n                            }\n                        }\n                    }\n                }\n            })\n            .state('404', {\n                url: '/404',\n                views: {\n                    '@': {\n                        templateUrl: 'common/views/404.html'\n                    }\n                }\n            });\n    }\n})();","'use strict';\n(function () {\n    angular.module('app.home')\n        .factory('homeFactory', ['$http', HomeFactory]);\n\n    function HomeFactory($http) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var factory = {\n            //Variables\n\n            //Functions\n            fetchArticlesContent: fetchArticlesContent,\n            fetchPictures: fetchPictures\n        };\n\n        return factory;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function fetchArticlesContent() {\n            var req = {\n                method: 'GET',\n                url: host_url + 'api/articles',\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            };\n            return $http(req);\n        }\n    }\n})();\n\n","'use strict';\n(function () {\n    angular\n        .module('app.home')\n        .controller('Home', ['$log', '$state', '$window', 'articleFactory', 'articles', 'pagination', Home]);\n\n    function Home($log, $state, $window, articleFactory, articles, pagination) {\n\n        $log.debug('[app.home] Loading Home controller');\n\n        /***************\n         * DECLARATIONS\n         **************/\n\n        var viewModel = this;\n        viewModel.articles = articles;\n        viewModel.pagination = pagination;\n\n        viewModel.goToArticle = goToArticle;\n        viewModel.goToPartner = goToPartner;\n        viewModel.nextPage = nextPage;\n        viewModel.previousPage = previousPage;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function goToArticle(articleLabel) {\n            var url = $state.href('articles', {'articleLabel': articleLabel});\n            $window.open(url,'_blank');\n            $window.scrollTo(0, 0);\n        }\n\n        function goToPartner(partnerLabel) {\n            var url = $state.href('partner', {'partnerLabel': partnerLabel});\n            $window.open(url,'_blank');\n            $window.scrollTo(0, 0);\n        }\n\n        function nextPage() {\n            var currentPage = viewModel.pagination.currentPage;\n            articleFactory.fetchArticles(currentPage + 1).then(function (data) {\n                viewModel.articles = data.articles;\n                viewModel.pagination = data.pagination;\n                $window.scrollTo(0, 0);\n            });\n        }\n\n        function previousPage() {\n            var currentPage = viewModel.pagination.currentPage;\n            articleFactory.fetchArticles(currentPage - 1).then(function (data) {\n                viewModel.articles = data.articles;\n                viewModel.pagination = data.pagination;\n                $window.scrollTo(0, 0);\n            });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('SidebarController', ['sidebarService', SidebarController]);\n\n    function SidebarController (sidebarService) {\n        var vm = this;\n        vm.medias = [];\n\n        _init();\n\n        function _init() {\n            sidebarService.getInstagramPictures().then(function(medias) {\n                vm.medias = medias;\n            });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .directive('sidebar', sidebarDirective);\n\n    function sidebarDirective () {\n        return {\n            bindToController: true,\n            controller: 'SidebarController',\n            controllerAs: 'ctrl',\n            link: function link (scope) {},\n            restrict: 'E',\n            scope: {},\n            templateUrl: 'sidebar/views/sidebar.html'\n        };\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .service('sidebarService', ['$http', sidebarService]);\n\n    function sidebarService ($http) {\n\n        function getInstagramPictures () {\n            var accessToken = '146070981.4dd8feb.97c8fd8acf924b3fb641f160ba7a3589';\n            var userId = 4771193178; // unzestedegourmandises\n            var count = 8;\n            var url = 'https://api.instagram.com/v1/users/' + userId + '/media/recent';\n\n            url += '?access_token=' + accessToken + '&scope=public_content&count=' + count + '&callback=JSON_CALLBACK' ;\n            return $http.jsonp(url).then(function(response) {\n                return response.data.data;\n            });\n\n        }\n\n        return {\n            getInstagramPictures: getInstagramPictures\n        };\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.articles', [\n        'ngSanitize',\n        'ngMaterial',\n        'ngRoute'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.articles')\n        .config(articleRoute);\n\n    function articleRoute ($stateProvider) {\n        $stateProvider\n            .state('articles', {\n                url: '/article/:articleLabel',\n                views: {\n                    '@': {\n                        templateUrl: 'articles/views/article.html',\n                        controller: 'Article',\n                        controllerAs: 'viewModel',\n                        title: 'article',\n                        resolve: {\n                            article: function ($stateParams, articleFactory) {\n                                return articleFactory.fetchArticleContent($stateParams.articleLabel);\n                            },\n                            comments: function ($stateParams, commentsService) {\n                                return commentsService.getCommentsByArticle($stateParams.articleLabel).then(function(data) {\n                                    return data.comments;\n                                });\n                            },\n                            nbComments: function ($stateParams, commentsService) {\n                                return commentsService.getCommentsByArticle($stateParams.articleLabel).then(function(data) {\n                                    return data.totalComments;\n                                });\n                            }\n                        }\n                    }\n                }\n            });\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.articles')\n        .factory('articleFactory', ['$http', ArticleFactory]);\n\n    function ArticleFactory($http) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var factory = {\n            //Variables\n\n            //Functions\n            fetchArticles: fetchArticles,\n            fetchArticleContent: fetchArticleContent,\n            insertView: insertView\n        };\n\n        return factory;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function fetchArticles (page) {\n            return $http.get(host_url + 'api/articles/' + page).then(function (response) {\n                return response.data;\n            });\n        }\n\n        function fetchArticleContent (articleLabel) {\n            var req = {\n                method: 'GET',\n                url: host_url + 'api/articles/article/' + articleLabel,\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            };\n            return $http(req).then(function (response) {\n                return response.data.article[0];\n            });\n        }\n\n        function insertView (articleId) {\n            return $http.post(host_url + 'api/articles/article/' + articleId + '/view');\n        }\n    }\n})();\n\n","'use strict';\n(function () {\n    angular\n        .module('app.articles')\n        .controller('Article', ['$sce', 'article', 'articleFactory', 'comments', 'nbComments', Article]);\n\n    function Article($sce, article, articleFactory, comments, nbComments) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var vm = this;\n        vm.recipe = article;\n        vm.comments = comments;\n        vm.nbComments = nbComments;\n\n        _init();\n\n        function _init() {\n            articleFactory.insertView(vm.recipe.id).then(function() {\n                angular.forEach(vm.comments, function (comment) {\n                    comment.text = $sce.trustAsHtml(comment.text);\n                });\n            });\n        }\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.partner', [\n        'ngSanitize',\n        'ngMaterial',\n        'ngRoute'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.partner')\n        .config(partnerRoute);\n\n    function partnerRoute ($stateProvider) {\n        $stateProvider\n            .state('partner', {\n                url: '/partner/:partnerLabel',\n                views: {\n                    '@': {\n                        templateUrl: 'partner/views/partner.html',\n                        controller: 'Partner',\n                        controllerAs: 'viewModel',\n                        title: 'partner',\n                        resolve: {\n                            partner: function ($stateParams, partnerFactory) {\n                                return partnerFactory.fetchPartnerContent($stateParams.partnerLabel);\n                            },\n                            comments: function ($stateParams, commentsService) {\n                                return commentsService.getCommentsByPartner($stateParams.partnerLabel).then(function(data) {\n                                    return data.comments;\n                                });\n                            },\n                            nbComments: function ($stateParams, commentsService) {\n                                return commentsService.getCommentsByPartner($stateParams.partnerLabel).then(function(data) {\n                                    return data.totalComments;\n                                });\n                            }\n                        }\n                    }\n                }\n            });\n    }\n})();\n","'use strict';\n(function () {\n    angular.module('app.partner')\n        .factory('partnerFactory', ['$http', PartnerFactory]);\n\n    function PartnerFactory($http) {\n\n        /***************\n         * DECLARATIONS\n         **************/\n\n        var factory = {\n            //Variables\n\n            //Functions\n            fetchPartnerContent: fetchPartnerContent,\n            insertView: insertView\n        };\n\n        return factory;\n\n        /******************\n         * IMPLEMENTATIONS\n         *****************/\n\n        function fetchPartnerContent (partnerLabel) {\n            var req = {\n                method: 'GET',\n                url: host_url + 'api/partners/partner/' + partnerLabel,\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            };\n            return $http(req).then(function (response) {\n                return response.data.partner[0];\n            });\n        }\n\n        function insertView (partnerId) {\n            return $http.post(host_url + 'api/partners/partner/' + partnerId + '/view');\n        }\n    }\n})();\n\n","'use strict';\n(function () {\n    angular\n        .module('app.partner')\n        .controller('Partner', ['$sce', 'partner', 'partnerFactory', 'comments', 'nbComments', Partner]);\n\n    function Partner($sce, partner, partnerFactory, comments, nbComments) {\n        /***************\n         * DECLARATIONS\n         **************/\n        var vm = this;\n        vm.partner = partner;\n        vm.comments = comments;\n        vm.nbComments = nbComments;\n\n        _init();\n\n        function _init() {\n            partnerFactory.insertView(vm.partner.id).then(function() {\n                angular.forEach(vm.comments, function (comment) {\n                    comment.text = $sce.trustAsHtml(comment.text);\n                });\n            });\n        }\n    }\n})();\n","/**\n * @ngdoc filter\n * @name moment\n *\n * @description\n *  Dates filter using moment.js\n *\n * */\n'use strict';\n(function () {\n    angular.module('app')\n        .filter('moment', [momentFilter]);\n\n    function momentFilter() {\n        return function(input) {\n            return moment(input + '', 'x').format('D MMMM YYYY');\n        }\n    }\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('CommentsController', ['$sanitize', 'commentsService', 'toastr', CommentsController]);\n\n    function CommentsController ($sanitize, commentsService, toastr) {\n        var vm = this;\n\n        vm.comment = {\n            pseudo: '',\n            mail: '',\n            url: '',\n            text: ''\n        };\n        vm.sendComment = sendComment;\n\n        function sendComment () {\n            var comment = $sanitize(vm.comment.text);\n            vm.comment.text = comment.replace(/\\n/g, '<br />');\n            if (vm.isRecipe) {\n                commentsService.sendComment(vm.comment, vm.articleId).then(function () {\n                    vm.comment = {\n                        pseudo: '',\n                        mail: '',\n                        url: '',\n                        text: ''\n                    };\n                    commentsService.getCommentsByArticle(vm.articleLabel).then(function (data) {\n                        vm.comments = data.comments;\n                        vm.nbComments = data.totalComments;\n                    });\n                    toastr.success('Commentaire envoyé !');\n                });\n            } else {\n                commentsService.sendPartnerComment(vm.comment, vm.articleId).then(function () {\n                    vm.comment = {\n                        pseudo: '',\n                        mail: '',\n                        url: '',\n                        text: ''\n                    };\n                    commentsService.getCommentsByPartner(vm.articleLabel).then(function (data) {\n                        vm.comments = data.comments;\n                        vm.nbComments = data.totalComments;\n                    });\n                    toastr.success('Commentaire envoyé !');\n                });\n            }\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .directive('comments', commentsDirective);\n\n    function commentsDirective () {\n        return {\n            bindToController: true,\n            controller: 'CommentsController',\n            controllerAs: 'ctrl',\n            link: function link (scope) {},\n            restrict: 'E',\n            scope: {\n                comments: '=',\n                nbComments: '=',\n                articleId: '=',\n                articleLabel: '=',\n                isRecipe: '='\n            },\n            templateUrl: 'articles/comments/views/comments.html'\n        };\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .service('commentsService', ['$http', commentsService]);\n\n    function commentsService ($http) {\n        function getCommentsByArticle (articleLabel) {\n            return $http.get(host_url + 'api/comments/' + articleLabel)\n                .then(function (response) {\n                    return response.data;\n                });\n        }\n\n        function getCommentsByPartner (partnerLabel) {\n            return $http.get(host_url + 'api/comments/partner/' + partnerLabel)\n                .then(function (response) {\n                    return response.data;\n                });\n        }\n\n        function sendComment (comment, articleId) {\n            return $http({\n                url: host_url + 'api/comments/' + articleId,\n                method: 'POST',\n                params: comment,\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            });\n        }\n\n        function sendPartnerComment (comment, partnerId) {\n            return $http({\n                url: host_url + 'api/comments/partner/' + partnerId,\n                method: 'POST',\n                params: comment,\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                }\n            });\n        }\n\n        return {\n            getCommentsByArticle: getCommentsByArticle,\n            getCommentsByPartner: getCommentsByPartner,\n            sendComment: sendComment,\n            sendPartnerComment: sendPartnerComment\n        };\n    }\n})();\n"],"sourceRoot":"/source/"}