{"version":3,"sources":["app/app.module.js","app/app.run.js","app/app.config.js","app/common/constants.js","app/common/menu.controller.js","app/partners/partners.module.js","app/partners/config.route.js","js/app.js","app/contact/contact.module.js","app/contact/config.route.js","app/home/home.module.js","app/home/config.route.js","app/home/home.factory.js","app/home/home.controller.js","app/sidebar/sidebar.controller.js","app/sidebar/sidebar.directive.js","app/sidebar/sidebar.service.js","app/articles/article.module.js","app/articles/config.route.js","app/articles/articles.factory.js","app/articles/articles.controller.js","app/partner/partner.module.js","app/partner/config.route.js","app/partner/partner.factory.js","app/partner/partner.controller.js","app/common/filters/moment.filter.js","app/articles/comments/comments.controller.js","app/articles/comments/comments.directive.js","app/articles/comments/comments.service.js"],"names":["bootstrapApplication","angular","element","document","ready","bootstrap","app","module","run","config","$compileProvider","debugInfoEnabled","host_url","Menu","$location","$state","goToHome","go","goToPartners","goToContact","viewModel","this","controller","partnersRoute","$stateProvider","state","url","views","@","templateUrl","title","$inject","contactRoute","routerConfig","$urlRouterProvider","_transitionToEntryPoint","transitionTo","when","otherwise","controllerAs","resolve","articles","articleFactory","fetchArticles","then","data","pagination","HomeFactory","$http","fetchArticlesContent","req","method","headers","Content-Type","factory","fetchPictures","Home","$log","$window","goToArticle","articleId","path","scrollTo","goToPartner","partnerId","nextPage","currentPage","previousPage","debug","SidebarController","sidebarService","_init","getInstagramPictures","medias","vm","sidebarDirective","bindToController","link","scope","restrict","directive","accessToken","userId","count","jsonp","response","service","articleRoute","article","$stateParams","fetchArticleContent","comments","commentsService","getCommentsByArticle","nbComments","totalComments","ArticleFactory","page","get","insertView","post","Article","$sce","recipe","id","forEach","comment","text","trustAsHtml","partnerRoute","partner","partnerFactory","fetchPartnerContent","getCommentsByPartner","PartnerFactory","Partner","momentFilter","input","moment","format","filter","CommentsController","$sanitize","toastr","sendComment","replace","isRecipe","pseudo","mail","success","sendPartnerComment","commentsDirective","params"],"mappings":"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","file":"js/app-3d50f9fdf3.js","sourcesContent":["'use strict';\r\n\r\n(function() {\r\n    var app = angular.module('app', [\r\n        'ui.router',\r\n        'app.home',\r\n        'app.articles',\r\n        'app.partners',\r\n        'app.partner',\r\n        'app.contact',\r\n        'ngSanitize',\r\n        'ngStorage',\r\n        'ngMaterial',\r\n        'ngAnimate',\r\n        'toastr'\r\n    ]);\r\n\r\n    bootstrapApplication();\r\n\r\n    /********************\r\n     * PRIVATE FUNCTIONS\r\n     *******************/\r\n\r\n    function bootstrapApplication() {\r\n        angular.element(document).ready(function() {\r\n            angular.bootstrap(document, ['app']);\r\n        });\r\n    }\r\n    return app;\r\n})();","'use strict';\n(function () {\n    angular.module('app')\n           .run();\n})();","/**\n * @ngdoc value\n *\n * @description\n *  Config the app module\n */\n\n'use strict';\n(function() {\n    angular\n        .module('app')\n        .config(['$compileProvider', function($compileProvider) {\n            //configure routeProvider as usual\n            $compileProvider.debugInfoEnabled(false);\n        }]);\n})();\n","//var host_url = 'http://127.0.0.1:8080/';\r\n//var host_url = 'http://192.168.1.15:8080/blog-server/';\r\nvar host_url = 'http://ec2-52-42-109-64.us-west-2.compute.amazonaws.com:8080/blog-server/';\r\n\r\n\r\n","'use strict';\r\n(function () {\r\n    angular\r\n        .module('app')\r\n        .controller('Menu', ['$location', '$state', Menu]);\r\n\r\n    function Menu($location, $state) {\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var viewModel = this;\r\n        viewModel.goToHome    = goToHome;\r\n        viewModel.goToPartners = goToPartners;\r\n        viewModel.goToContact = goToContact;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function goToHome() {\r\n            $state.go('home');\r\n        }\r\n\r\n        function goToPartners() {\r\n            $state.go('partners')\r\n        }\r\n\r\n        function goToContact() {\r\n            $state.go('contact');\r\n        }\r\n    }\r\n})();\r\n","'use strict';\r\n(function () {\r\n    angular.module('app.partners', [\r\n        'ngSanitize',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.partners')\r\n        .config(partnersRoute);\r\n\r\n    function partnersRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('partners', {\r\n                url: '/partners',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'partners/views/partners.html',\r\n                        title: 'partners'\r\n                    }\r\n                }\r\n            });\r\n    }\r\n})();\r\n","'use strict';\r\n\r\n(function() {\r\n    var app = angular.module('app', [\r\n        'ui.router',\r\n        'app.home',\r\n        'app.articles',\r\n        'app.partners',\r\n        'app.partner',\r\n        'app.contact',\r\n        'ngSanitize',\r\n        'ngStorage',\r\n        'ngMaterial',\r\n        'ngAnimate',\r\n        'toastr'\r\n    ]);\r\n\r\n    bootstrapApplication();\r\n\r\n    /********************\r\n     * PRIVATE FUNCTIONS\r\n     *******************/\r\n\r\n    function bootstrapApplication() {\r\n        angular.element(document).ready(function() {\r\n            angular.bootstrap(document, ['app']);\r\n        });\r\n    }\r\n    return app;\r\n})();\n'use strict';\n(function () {\n    angular.module('app')\n           .run();\n})();\n/**\n * @ngdoc value\n *\n * @description\n *  Config the app module\n */\n\n'use strict';\n(function() {\n    angular\n        .module('app')\n        .config(['$compileProvider', function($compileProvider) {\n            //configure routeProvider as usual\n            $compileProvider.debugInfoEnabled(false);\n        }]);\n})();\n\n//var host_url = 'http://127.0.0.1:8080/';\r\n//var host_url = 'http://192.168.1.15:8080/blog-server/';\r\nvar host_url = 'http://ec2-52-42-109-64.us-west-2.compute.amazonaws.com:8080/blog-server/';\r\n\r\n\r\n\n'use strict';\r\n(function () {\r\n    angular\r\n        .module('app')\r\n        .controller('Menu', ['$location', '$state', Menu]);\r\n\r\n    function Menu($location, $state) {\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var viewModel = this;\r\n        viewModel.goToHome    = goToHome;\r\n        viewModel.goToPartners = goToPartners;\r\n        viewModel.goToContact = goToContact;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function goToHome() {\r\n            $state.go('home');\r\n        }\r\n\r\n        function goToPartners() {\r\n            $state.go('partners')\r\n        }\r\n\r\n        function goToContact() {\r\n            $state.go('contact');\r\n        }\r\n    }\r\n})();\r\n\n'use strict';\r\n(function () {\r\n    angular.module('app.partners', [\r\n        'ngSanitize',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.partners')\r\n        .config(partnersRoute);\r\n\r\n    function partnersRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('partners', {\r\n                url: '/partners',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'partners/views/partners.html',\r\n                        title: 'partners'\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    partnersRoute.$inject = [\"$stateProvider\"];\r\n})();\r\n\n'use strict';\r\n(function () {\r\n    angular.module('app.contact', [\r\n        'ngSanitize',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contact')\r\n        .config(contactRoute);\r\n\r\n    function contactRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('contact', {\r\n                url: '/contact',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'contact/views/contact.html',\r\n                        title: 'contact'\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    contactRoute.$inject = [\"$stateProvider\"];\r\n})();\r\n\n'use strict';\n(function () {\n    angular.module('app.home', [\n        'ngSanitize',\n        'ngMaterial'\n    ]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app.home')\n        .config(routerConfig);\n\n    function routerConfig ($stateProvider, $urlRouterProvider) {\n\n        function _transitionToEntryPoint ($state) {\n            $state.transitionTo('home');\n        }\r\n        _transitionToEntryPoint.$inject = [\"$state\"];\n\n        $urlRouterProvider\n            .when('', _transitionToEntryPoint)\n            .otherwise('/404');\n\n        $stateProvider\n            .state('entryPoint', {\n                url: '/redirect',\n                controller: _transitionToEntryPoint\n            })\n            .state('home', {\n                url: '/',\n                views: {\n                    '@': {\n                        templateUrl: 'home/views/home.html',\n                        controller: 'Home',\n                        controllerAs: 'ctrl',\n                        title: 'home',\n                        resolve: {\n                            articles: [\"articleFactory\", function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                   return data.articles;\n                                });\n                            }],\n                            pagination: [\"articleFactory\", function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                    return data.pagination;\n                                });\n                            }]\n                        }\n                    }\n                }\n            })\n            .state('404', {\n                url: '/404',\n                views: {\n                    '@': {\n                        templateUrl: 'common/views/404.html'\n                    }\n                }\n            });\n    }\r\n    routerConfig.$inject = [\"$stateProvider\", \"$urlRouterProvider\"];\n})();\n'use strict';\r\n(function () {\r\n    angular.module('app.home')\r\n        .factory('homeFactory', ['$http', HomeFactory]);\r\n\r\n    function HomeFactory($http) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchArticlesContent: fetchArticlesContent,\r\n            fetchPictures: fetchPictures\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchArticlesContent() {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/articles',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req);\r\n        }\r\n    }\r\n})();\r\n\r\n\n'use strict';\r\n(function () {\r\n    angular\r\n        .module('app.home')\r\n        .controller('Home', ['$log', '$location', '$window', 'articleFactory', 'articles', 'pagination', Home]);\r\n\r\n    function Home($log, $location, $window, articleFactory, articles, pagination) {\r\n\r\n        $log.debug('[app.home] Loading Home controller');\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var viewModel = this;\r\n        viewModel.articles = articles;\r\n        viewModel.pagination = pagination;\r\n\r\n        viewModel.goToArticle = goToArticle;\r\n        viewModel.goToPartner = goToPartner;\r\n        viewModel.nextPage = nextPage;\r\n        viewModel.previousPage = previousPage;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function goToArticle(articleId) {\r\n            $location.path('article/' + articleId);\r\n            $window.scrollTo(0, 0);\r\n        }\r\n\r\n        function goToPartner(partnerId) {\r\n            $location.path('partner/' + partnerId);\r\n            $window.scrollTo(0, 0);\r\n        }\r\n\r\n        function nextPage() {\r\n            var currentPage = viewModel.pagination.currentPage;\r\n            articleFactory.fetchArticles(currentPage + 1).then(function (data) {\r\n                viewModel.articles = data.articles;\r\n                viewModel.pagination = data.pagination;\r\n                $window.scrollTo(0, 0);\r\n            });\r\n        }\r\n\r\n        function previousPage() {\r\n            var currentPage = viewModel.pagination.currentPage;\r\n            articleFactory.fetchArticles(currentPage - 1).then(function (data) {\r\n                viewModel.articles = data.articles;\r\n                viewModel.pagination = data.pagination;\r\n                $window.scrollTo(0, 0);\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('SidebarController', ['sidebarService', SidebarController]);\r\n\r\n    function SidebarController (sidebarService) {\r\n        var vm = this;\r\n        vm.medias = [];\r\n\r\n        _init();\r\n\r\n        function _init() {\r\n            sidebarService.getInstagramPictures().then(function(medias) {\r\n                vm.medias = medias;\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('sidebar', sidebarDirective);\r\n\r\n    function sidebarDirective () {\r\n        return {\r\n            bindToController: true,\r\n            controller: 'SidebarController',\r\n            controllerAs: 'ctrl',\r\n            link: function link (scope) {},\r\n            restrict: 'E',\r\n            scope: {},\r\n            templateUrl: 'sidebar/views/sidebar.html'\r\n        };\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('sidebarService', ['$http', sidebarService]);\r\n\r\n    function sidebarService ($http) {\r\n\r\n        function getInstagramPictures () {\r\n            var accessToken = '146070981.4dd8feb.97c8fd8acf924b3fb641f160ba7a3589';\r\n            var userId = 4771193178; // unzestedegourmandises\r\n            var count = 8;\r\n            var url = 'https://api.instagram.com/v1/users/' + userId + '/media/recent';\r\n\r\n            url += '?access_token=' + accessToken + '&scope=public_content&count=' + count + '&callback=JSON_CALLBACK' ;\r\n            return $http.jsonp(url).then(function(response) {\r\n                return response.data.data;\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            getInstagramPictures: getInstagramPictures\r\n        };\r\n    }\r\n})();\r\n\n'use strict';\r\n(function () {\r\n    angular.module('app.articles', [\r\n        'ngSanitize',\r\n        'ngMaterial',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.articles')\r\n        .config(articleRoute);\r\n\r\n    function articleRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('articles', {\r\n                url: '/article/:articleId',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'articles/views/article.html',\r\n                        controller: 'Article',\r\n                        controllerAs: 'viewModel',\r\n                        title: 'article',\r\n                        resolve: {\r\n                            article: [\"$stateParams\", \"articleFactory\", function ($stateParams, articleFactory) {\r\n                                return articleFactory.fetchArticleContent($stateParams.articleId);\r\n                            }],\r\n                            comments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByArticle($stateParams.articleId).then(function(data) {\r\n                                    return data.comments;\r\n                                });\r\n                            }],\r\n                            nbComments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByArticle($stateParams.articleId).then(function(data) {\r\n                                    return data.totalComments;\r\n                                });\r\n                            }]\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    articleRoute.$inject = [\"$stateProvider\"];\r\n})();\r\n\n'use strict';\r\n(function () {\r\n    angular.module('app.articles')\r\n        .factory('articleFactory', ['$http', ArticleFactory]);\r\n\r\n    function ArticleFactory($http) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchArticles: fetchArticles,\r\n            fetchArticleContent: fetchArticleContent,\r\n            insertView: insertView\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchArticles (page) {\r\n            return $http.get(host_url + 'api/articles/' + page).then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function fetchArticleContent (articleId) {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/articles/article/' + articleId,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req).then(function (response) {\r\n                return response.data.article[0];\r\n            });\r\n        }\r\n\r\n        function insertView (articleId) {\r\n            return $http.post(host_url + 'api/articles/article/' + articleId + '/view');\r\n        }\r\n    }\r\n})();\r\n\r\n\n'use strict';\r\n(function () {\r\n    angular\r\n        .module('app.articles')\r\n        .controller('Article', ['$sce', 'article', 'articleFactory', 'comments', 'nbComments', Article]);\r\n\r\n    function Article($sce, article, articleFactory, comments, nbComments) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var vm = this;\r\n        vm.recipe = article;\r\n        vm.comments = comments;\r\n        vm.nbComments = nbComments;\r\n\r\n        _init();\r\n\r\n        function _init() {\r\n            articleFactory.insertView(vm.recipe.id).then(function() {\r\n                angular.forEach(vm.comments, function (comment) {\r\n                    comment.text = $sce.trustAsHtml(comment.text);\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n'use strict';\r\n(function () {\r\n    angular.module('app.partner', [\r\n        'ngSanitize',\r\n        'ngMaterial',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.partner')\r\n        .config(partnerRoute);\r\n\r\n    function partnerRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('partner', {\r\n                url: '/partner/:partnerId',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'partner/views/partner.html',\r\n                        controller: 'Partner',\r\n                        controllerAs: 'viewModel',\r\n                        title: 'partner',\r\n                        resolve: {\r\n                            partner: [\"$stateParams\", \"partnerFactory\", function ($stateParams, partnerFactory) {\r\n                                return partnerFactory.fetchPartnerContent($stateParams.partnerId);\r\n                            }],\r\n                            comments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByPartner($stateParams.partnerId).then(function(data) {\r\n                                    return data.comments;\r\n                                });\r\n                            }],\r\n                            nbComments: [\"$stateParams\", \"commentsService\", function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByPartner($stateParams.partnerId).then(function(data) {\r\n                                    return data.totalComments;\r\n                                });\r\n                            }]\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    partnerRoute.$inject = [\"$stateProvider\"];\r\n})();\r\n\n'use strict';\r\n(function () {\r\n    angular.module('app.partner')\r\n        .factory('partnerFactory', ['$http', PartnerFactory]);\r\n\r\n    function PartnerFactory($http) {\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchPartnerContent: fetchPartnerContent,\r\n            insertView: insertView\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchPartnerContent (partnerId) {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/partners/partner/' + partnerId,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req).then(function (response) {\r\n                return response.data.partner[0];\r\n            });\r\n        }\r\n\r\n        function insertView (partnerId) {\r\n            return $http.post(host_url + 'api/partners/partner/' + partnerId + '/view');\r\n        }\r\n    }\r\n})();\r\n\r\n\n'use strict';\r\n(function () {\r\n    angular\r\n        .module('app.partner')\r\n        .controller('Partner', ['$sce', 'partner', 'partnerFactory', 'comments', 'nbComments', Partner]);\r\n\r\n    function Partner($sce, partner, partnerFactory, comments, nbComments) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var vm = this;\r\n        vm.partner = partner;\r\n        vm.comments = comments;\r\n        vm.nbComments = nbComments;\r\n\r\n        _init();\r\n\r\n        function _init() {\r\n            partnerFactory.insertView(vm.partner.id).then(function() {\r\n                angular.forEach(vm.comments, function (comment) {\r\n                    comment.text = $sce.trustAsHtml(comment.text);\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n/**\r\n * @ngdoc filter\r\n * @name moment\r\n *\r\n * @description\r\n *  Dates filter using moment.js\r\n *\r\n * */\r\n'use strict';\r\n(function () {\r\n    angular.module('app')\r\n        .filter('moment', [momentFilter]);\r\n\r\n    function momentFilter() {\r\n        return function(input) {\r\n            return moment(input + '', 'x').format('D MMMM YYYY');\r\n        }\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('CommentsController', ['$sanitize', 'commentsService', 'toastr', CommentsController]);\r\n\r\n    function CommentsController ($sanitize, commentsService, toastr) {\r\n        var vm = this;\r\n\r\n        vm.comment = {\r\n            pseudo: '',\r\n            mail: '',\r\n            url: '',\r\n            text: ''\r\n        };\r\n        vm.sendComment = sendComment;\r\n\r\n        function sendComment () {\r\n            var comment = $sanitize(vm.comment.text);\r\n            vm.comment.text = comment.replace(/\\n/g, '<br />');\r\n            if (vm.isRecipe) {\r\n                commentsService.sendComment(vm.comment, vm.articleId).then(function () {\r\n                    vm.comment = {\r\n                        pseudo: '',\r\n                        mail: '',\r\n                        url: '',\r\n                        text: ''\r\n                    };\r\n                    commentsService.getCommentsByArticle(vm.articleId).then(function (data) {\r\n                        vm.comments = data.comments;\r\n                        vm.nbComments = data.totalComments;\r\n                    });\r\n                    toastr.success('Commentaire envoyé !');\r\n                });\r\n            } else {\r\n                commentsService.sendPartnerComment(vm.comment, vm.articleId).then(function () {\r\n                    vm.comment = {\r\n                        pseudo: '',\r\n                        mail: '',\r\n                        url: '',\r\n                        text: ''\r\n                    };\r\n                    commentsService.getCommentsByPartner(vm.articleId).then(function (data) {\r\n                        vm.comments = data.comments;\r\n                        vm.nbComments = data.totalComments;\r\n                    });\r\n                    toastr.success('Commentaire envoyé !');\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('comments', commentsDirective);\r\n\r\n    function commentsDirective () {\r\n        return {\r\n            bindToController: true,\r\n            controller: 'CommentsController',\r\n            controllerAs: 'ctrl',\r\n            link: function link (scope) {},\r\n            restrict: 'E',\r\n            scope: {\r\n                comments: '=',\r\n                nbComments: '=',\r\n                articleId: '=',\r\n                isRecipe: '='\r\n            },\r\n            templateUrl: 'articles/comments/views/comments.html'\r\n        };\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('commentsService', ['$http', commentsService]);\r\n\r\n    function commentsService ($http) {\r\n        function getCommentsByArticle (articleId) {\r\n            return $http.get(host_url + 'api/comments/' + articleId)\r\n                .then(function (response) {\r\n                    return response.data;\r\n                });\r\n        }\r\n\r\n        function getCommentsByPartner (partnerId) {\r\n            return $http.get(host_url + 'api/comments/partner/' + partnerId)\r\n                .then(function (response) {\r\n                    return response.data;\r\n                });\r\n        }\r\n\r\n        function sendComment (comment, articleId) {\r\n            return $http({\r\n                url: host_url + 'api/comments/' + articleId,\r\n                method: 'POST',\r\n                params: comment,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            });\r\n        }\r\n\r\n        function sendPartnerComment (comment, partnerId) {\r\n            return $http({\r\n                url: host_url + 'api/comments/partner/' + partnerId,\r\n                method: 'POST',\r\n                params: comment,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            getCommentsByArticle: getCommentsByArticle,\r\n            getCommentsByPartner: getCommentsByPartner,\r\n            sendComment: sendComment,\r\n            sendPartnerComment: sendPartnerComment\r\n        };\r\n    }\r\n})();\r\n","'use strict';\r\n(function () {\r\n    angular.module('app.contact', [\r\n        'ngSanitize',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contact')\r\n        .config(contactRoute);\r\n\r\n    function contactRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('contact', {\r\n                url: '/contact',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'contact/views/contact.html',\r\n                        title: 'contact'\r\n                    }\r\n                }\r\n            });\r\n    }\r\n})();\r\n","'use strict';\n(function () {\n    angular.module('app.home', [\n        'ngSanitize',\n        'ngMaterial'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.home')\n        .config(routerConfig);\n\n    function routerConfig ($stateProvider, $urlRouterProvider) {\n\n        function _transitionToEntryPoint ($state) {\n            $state.transitionTo('home');\n        }\n\n        $urlRouterProvider\n            .when('', _transitionToEntryPoint)\n            .otherwise('/404');\n\n        $stateProvider\n            .state('entryPoint', {\n                url: '/redirect',\n                controller: _transitionToEntryPoint\n            })\n            .state('home', {\n                url: '/',\n                views: {\n                    '@': {\n                        templateUrl: 'home/views/home.html',\n                        controller: 'Home',\n                        controllerAs: 'ctrl',\n                        title: 'home',\n                        resolve: {\n                            articles: function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                   return data.articles;\n                                });\n                            },\n                            pagination: function (articleFactory) {\n                                return articleFactory.fetchArticles(1).then(function(data) {\n                                    return data.pagination;\n                                });\n                            }\n                        }\n                    }\n                }\n            })\n            .state('404', {\n                url: '/404',\n                views: {\n                    '@': {\n                        templateUrl: 'common/views/404.html'\n                    }\n                }\n            });\n    }\n})();","'use strict';\r\n(function () {\r\n    angular.module('app.home')\r\n        .factory('homeFactory', ['$http', HomeFactory]);\r\n\r\n    function HomeFactory($http) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchArticlesContent: fetchArticlesContent,\r\n            fetchPictures: fetchPictures\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchArticlesContent() {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/articles',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req);\r\n        }\r\n    }\r\n})();\r\n\r\n","'use strict';\r\n(function () {\r\n    angular\r\n        .module('app.home')\r\n        .controller('Home', ['$log', '$location', '$window', 'articleFactory', 'articles', 'pagination', Home]);\r\n\r\n    function Home($log, $location, $window, articleFactory, articles, pagination) {\r\n\r\n        $log.debug('[app.home] Loading Home controller');\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var viewModel = this;\r\n        viewModel.articles = articles;\r\n        viewModel.pagination = pagination;\r\n\r\n        viewModel.goToArticle = goToArticle;\r\n        viewModel.goToPartner = goToPartner;\r\n        viewModel.nextPage = nextPage;\r\n        viewModel.previousPage = previousPage;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function goToArticle(articleId) {\r\n            $location.path('article/' + articleId);\r\n            $window.scrollTo(0, 0);\r\n        }\r\n\r\n        function goToPartner(partnerId) {\r\n            $location.path('partner/' + partnerId);\r\n            $window.scrollTo(0, 0);\r\n        }\r\n\r\n        function nextPage() {\r\n            var currentPage = viewModel.pagination.currentPage;\r\n            articleFactory.fetchArticles(currentPage + 1).then(function (data) {\r\n                viewModel.articles = data.articles;\r\n                viewModel.pagination = data.pagination;\r\n                $window.scrollTo(0, 0);\r\n            });\r\n        }\r\n\r\n        function previousPage() {\r\n            var currentPage = viewModel.pagination.currentPage;\r\n            articleFactory.fetchArticles(currentPage - 1).then(function (data) {\r\n                viewModel.articles = data.articles;\r\n                viewModel.pagination = data.pagination;\r\n                $window.scrollTo(0, 0);\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('SidebarController', ['sidebarService', SidebarController]);\r\n\r\n    function SidebarController (sidebarService) {\r\n        var vm = this;\r\n        vm.medias = [];\r\n\r\n        _init();\r\n\r\n        function _init() {\r\n            sidebarService.getInstagramPictures().then(function(medias) {\r\n                vm.medias = medias;\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('sidebar', sidebarDirective);\r\n\r\n    function sidebarDirective () {\r\n        return {\r\n            bindToController: true,\r\n            controller: 'SidebarController',\r\n            controllerAs: 'ctrl',\r\n            link: function link (scope) {},\r\n            restrict: 'E',\r\n            scope: {},\r\n            templateUrl: 'sidebar/views/sidebar.html'\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('sidebarService', ['$http', sidebarService]);\r\n\r\n    function sidebarService ($http) {\r\n\r\n        function getInstagramPictures () {\r\n            var accessToken = '146070981.4dd8feb.97c8fd8acf924b3fb641f160ba7a3589';\r\n            var userId = 4771193178; // unzestedegourmandises\r\n            var count = 8;\r\n            var url = 'https://api.instagram.com/v1/users/' + userId + '/media/recent';\r\n\r\n            url += '?access_token=' + accessToken + '&scope=public_content&count=' + count + '&callback=JSON_CALLBACK' ;\r\n            return $http.jsonp(url).then(function(response) {\r\n                return response.data.data;\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            getInstagramPictures: getInstagramPictures\r\n        };\r\n    }\r\n})();\r\n","'use strict';\r\n(function () {\r\n    angular.module('app.articles', [\r\n        'ngSanitize',\r\n        'ngMaterial',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.articles')\r\n        .config(articleRoute);\r\n\r\n    function articleRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('articles', {\r\n                url: '/article/:articleId',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'articles/views/article.html',\r\n                        controller: 'Article',\r\n                        controllerAs: 'viewModel',\r\n                        title: 'article',\r\n                        resolve: {\r\n                            article: function ($stateParams, articleFactory) {\r\n                                return articleFactory.fetchArticleContent($stateParams.articleId);\r\n                            },\r\n                            comments: function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByArticle($stateParams.articleId).then(function(data) {\r\n                                    return data.comments;\r\n                                });\r\n                            },\r\n                            nbComments: function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByArticle($stateParams.articleId).then(function(data) {\r\n                                    return data.totalComments;\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n})();\r\n","'use strict';\r\n(function () {\r\n    angular.module('app.articles')\r\n        .factory('articleFactory', ['$http', ArticleFactory]);\r\n\r\n    function ArticleFactory($http) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchArticles: fetchArticles,\r\n            fetchArticleContent: fetchArticleContent,\r\n            insertView: insertView\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchArticles (page) {\r\n            return $http.get(host_url + 'api/articles/' + page).then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function fetchArticleContent (articleId) {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/articles/article/' + articleId,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req).then(function (response) {\r\n                return response.data.article[0];\r\n            });\r\n        }\r\n\r\n        function insertView (articleId) {\r\n            return $http.post(host_url + 'api/articles/article/' + articleId + '/view');\r\n        }\r\n    }\r\n})();\r\n\r\n","'use strict';\r\n(function () {\r\n    angular\r\n        .module('app.articles')\r\n        .controller('Article', ['$sce', 'article', 'articleFactory', 'comments', 'nbComments', Article]);\r\n\r\n    function Article($sce, article, articleFactory, comments, nbComments) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var vm = this;\r\n        vm.recipe = article;\r\n        vm.comments = comments;\r\n        vm.nbComments = nbComments;\r\n\r\n        _init();\r\n\r\n        function _init() {\r\n            articleFactory.insertView(vm.recipe.id).then(function() {\r\n                angular.forEach(vm.comments, function (comment) {\r\n                    comment.text = $sce.trustAsHtml(comment.text);\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();\r\n","'use strict';\r\n(function () {\r\n    angular.module('app.partner', [\r\n        'ngSanitize',\r\n        'ngMaterial',\r\n        'ngRoute'\r\n    ]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.partner')\r\n        .config(partnerRoute);\r\n\r\n    function partnerRoute ($stateProvider) {\r\n        $stateProvider\r\n            .state('partner', {\r\n                url: '/partner/:partnerId',\r\n                views: {\r\n                    '@': {\r\n                        templateUrl: 'partner/views/partner.html',\r\n                        controller: 'Partner',\r\n                        controllerAs: 'viewModel',\r\n                        title: 'partner',\r\n                        resolve: {\r\n                            partner: function ($stateParams, partnerFactory) {\r\n                                return partnerFactory.fetchPartnerContent($stateParams.partnerId);\r\n                            },\r\n                            comments: function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByPartner($stateParams.partnerId).then(function(data) {\r\n                                    return data.comments;\r\n                                });\r\n                            },\r\n                            nbComments: function ($stateParams, commentsService) {\r\n                                return commentsService.getCommentsByPartner($stateParams.partnerId).then(function(data) {\r\n                                    return data.totalComments;\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n})();\r\n","'use strict';\r\n(function () {\r\n    angular.module('app.partner')\r\n        .factory('partnerFactory', ['$http', PartnerFactory]);\r\n\r\n    function PartnerFactory($http) {\r\n\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n\r\n        var factory = {\r\n            //Variables\r\n\r\n            //Functions\r\n            fetchPartnerContent: fetchPartnerContent,\r\n            insertView: insertView\r\n        };\r\n\r\n        return factory;\r\n\r\n        /******************\r\n         * IMPLEMENTATIONS\r\n         *****************/\r\n\r\n        function fetchPartnerContent (partnerId) {\r\n            var req = {\r\n                method: 'GET',\r\n                url: host_url + 'api/partners/partner/' + partnerId,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            };\r\n            return $http(req).then(function (response) {\r\n                return response.data.partner[0];\r\n            });\r\n        }\r\n\r\n        function insertView (partnerId) {\r\n            return $http.post(host_url + 'api/partners/partner/' + partnerId + '/view');\r\n        }\r\n    }\r\n})();\r\n\r\n","'use strict';\r\n(function () {\r\n    angular\r\n        .module('app.partner')\r\n        .controller('Partner', ['$sce', 'partner', 'partnerFactory', 'comments', 'nbComments', Partner]);\r\n\r\n    function Partner($sce, partner, partnerFactory, comments, nbComments) {\r\n        /***************\r\n         * DECLARATIONS\r\n         **************/\r\n        var vm = this;\r\n        vm.partner = partner;\r\n        vm.comments = comments;\r\n        vm.nbComments = nbComments;\r\n\r\n        _init();\r\n\r\n        function _init() {\r\n            partnerFactory.insertView(vm.partner.id).then(function() {\r\n                angular.forEach(vm.comments, function (comment) {\r\n                    comment.text = $sce.trustAsHtml(comment.text);\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();\r\n","/**\r\n * @ngdoc filter\r\n * @name moment\r\n *\r\n * @description\r\n *  Dates filter using moment.js\r\n *\r\n * */\r\n'use strict';\r\n(function () {\r\n    angular.module('app')\r\n        .filter('moment', [momentFilter]);\r\n\r\n    function momentFilter() {\r\n        return function(input) {\r\n            return moment(input + '', 'x').format('D MMMM YYYY');\r\n        }\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('CommentsController', ['$sanitize', 'commentsService', 'toastr', CommentsController]);\r\n\r\n    function CommentsController ($sanitize, commentsService, toastr) {\r\n        var vm = this;\r\n\r\n        vm.comment = {\r\n            pseudo: '',\r\n            mail: '',\r\n            url: '',\r\n            text: ''\r\n        };\r\n        vm.sendComment = sendComment;\r\n\r\n        function sendComment () {\r\n            var comment = $sanitize(vm.comment.text);\r\n            vm.comment.text = comment.replace(/\\n/g, '<br />');\r\n            if (vm.isRecipe) {\r\n                commentsService.sendComment(vm.comment, vm.articleId).then(function () {\r\n                    vm.comment = {\r\n                        pseudo: '',\r\n                        mail: '',\r\n                        url: '',\r\n                        text: ''\r\n                    };\r\n                    commentsService.getCommentsByArticle(vm.articleId).then(function (data) {\r\n                        vm.comments = data.comments;\r\n                        vm.nbComments = data.totalComments;\r\n                    });\r\n                    toastr.success('Commentaire envoyé !');\r\n                });\r\n            } else {\r\n                commentsService.sendPartnerComment(vm.comment, vm.articleId).then(function () {\r\n                    vm.comment = {\r\n                        pseudo: '',\r\n                        mail: '',\r\n                        url: '',\r\n                        text: ''\r\n                    };\r\n                    commentsService.getCommentsByPartner(vm.articleId).then(function (data) {\r\n                        vm.comments = data.comments;\r\n                        vm.nbComments = data.totalComments;\r\n                    });\r\n                    toastr.success('Commentaire envoyé !');\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('comments', commentsDirective);\r\n\r\n    function commentsDirective () {\r\n        return {\r\n            bindToController: true,\r\n            controller: 'CommentsController',\r\n            controllerAs: 'ctrl',\r\n            link: function link (scope) {},\r\n            restrict: 'E',\r\n            scope: {\r\n                comments: '=',\r\n                nbComments: '=',\r\n                articleId: '=',\r\n                isRecipe: '='\r\n            },\r\n            templateUrl: 'articles/comments/views/comments.html'\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .service('commentsService', ['$http', commentsService]);\r\n\r\n    function commentsService ($http) {\r\n        function getCommentsByArticle (articleId) {\r\n            return $http.get(host_url + 'api/comments/' + articleId)\r\n                .then(function (response) {\r\n                    return response.data;\r\n                });\r\n        }\r\n\r\n        function getCommentsByPartner (partnerId) {\r\n            return $http.get(host_url + 'api/comments/partner/' + partnerId)\r\n                .then(function (response) {\r\n                    return response.data;\r\n                });\r\n        }\r\n\r\n        function sendComment (comment, articleId) {\r\n            return $http({\r\n                url: host_url + 'api/comments/' + articleId,\r\n                method: 'POST',\r\n                params: comment,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            });\r\n        }\r\n\r\n        function sendPartnerComment (comment, partnerId) {\r\n            return $http({\r\n                url: host_url + 'api/comments/partner/' + partnerId,\r\n                method: 'POST',\r\n                params: comment,\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8'\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            getCommentsByArticle: getCommentsByArticle,\r\n            getCommentsByPartner: getCommentsByPartner,\r\n            sendComment: sendComment,\r\n            sendPartnerComment: sendPartnerComment\r\n        };\r\n    }\r\n})();\r\n"],"sourceRoot":"/source/"}